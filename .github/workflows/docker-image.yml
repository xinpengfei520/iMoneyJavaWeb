name: Docker Image CI & CD

on:
  push:
    branches: ["master"] #当主分支有推送时触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    name: 构建镜像 #任务名称
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build the Docker image
        run: |
          docker version
          # 登录阿里云镜像仓库
          docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-shanghai.aliyuncs.com
          #cd xxl-job-admin
          # 使用Dockerfile构建镜像
          docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPOSITORY }}:${{ github.run_id }}
          # 推送镜像到镜像仓库
          docker push ${{ secrets.DOCKER_REPOSITORY }}:${{ github.run_id }}

  deploy:
    needs: [build] # 依赖于 build 任务完成
    name: 部署容器 # 任务名称
    runs-on: ubuntu-latest # 在 Ubuntu 最新版上运行
    steps:
      # 部署容器到主机
      - name: 容器部署
        uses: appleboy/ssh-action@master # 使用 ssh-action 执行 SSH 相关的操作
        with:
          host: ${{ secrets.HOST }}  # 主机地址
          username: ${{ secrets.HOST_USERNAME }}  # 主机用户名
          password: ${{ secrets.HOST_PASSWORD }}  # 主机密码
          port: ${{ secrets.HOST_PORT }}  # 主机端口
          script: |
            # 停止并移除现有容器和镜像
            docker ps | grep "${{ secrets.DOCKER_REPOSITORY }}" | awk '{print $1}' | xargs -r docker stop
            docker ps -a | grep "${{ secrets.DOCKER_REPOSITORY }}" | awk '{print $1}' | xargs -r docker rm -f
            docker images -q ${{ secrets.DOCKER_REPOSITORY }} | xargs -r docker rmi -f

            # 登录到 Docker 仓库
            docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
            # 拉取最新的 Docker 镜像
            docker pull ${{ secrets.DOCKER_REPOSITORY }}:${{ github.run_id }}
            # 运行 Docker 容器
            docker run --name imoney -p 2001:8080 --net my-network --restart=always -d ${{ secrets.DOCKER_REPOSITORY }}:${{ github.run_id }}

      # 等待容器启动
      - name: 等待容器启动
        run: sleep 10

      # 检查容器启动状态
      - name: 检测容器启动状态
        uses: appleboy/ssh-action@master # 使用 ssh-action 执行 SSH 相关的操作
        with:
          host: ${{ secrets.HOST }}  # 主机地址
          username: ${{ secrets.HOST_USERNAME }}  # 主机用户名
          password: ${{ secrets.HOST_PASSWORD }}  # 主机密码
          port: ${{ secrets.HOST_PORT }}  # 主机端口
          script: |
            container_id=$(docker ps -q --filter ancestor="${{ secrets.DOCKER_REPOSITORY }}:${{ github.run_id }}")
            if [ -z "$container_id" ]; then
              echo "容器启动失败！"
              exit 1
            else
              echo "容器启动成功，ID: $container_id"
            fi
